<?xml version="1.0"?>
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>edu.uoc.tfgmonitorsystem</groupId>
        <artifactId>tfg-monitor-system</artifactId>
        <version>1.2</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>log-microservice</artifactId>
    <name>log-microservice</name>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>edu.uoc.tfgmonitorsystem</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 from starter-test (and all other related test-starter, i.e those for security and project reactor -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- Provide JUnit 5 API -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>
        
        
        <dependency>
              <groupId>org.jacoco</groupId>
              <artifactId>org.jacoco.agent</artifactId>
              <version>${jacoco.version}</version>
              <classifier>runtime</classifier>
              <scope>test</scope>
        </dependency>
        
    </dependencies>

    <build>
         <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>


            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>

                <configuration>

                    <images>
                        <!-- A single's image configuration -->
                        <image>
                            <alias>${project.name}</alias>
                            <name>${project.name}:${project.version}</name>

                            <build>
                                <from>java:8</from>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <cmd>java -jar /maven/${project.artifactId}-${project.version}.jar</cmd>
                                <ports>
                                    <port>8095</port>
                                </ports>
                            </build>

                            <run>
                                <ports>
                                    <port>8095:8095</port>
                                </ports>
                            </run>

                        </image>
                    </images>
                </configuration>

                <!-- Connect start/stop to pre- and post-integration-test phase, respectively 
                    if you want to start your docker containers during integration tests 
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                -->
            </plugin>
        </plugins>


    </build>

</project>
