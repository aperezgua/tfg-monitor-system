version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    networks:
      - tfg_network    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
      MONGO_INITDB_DATABASE : tfg-monitor-system-db
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5

  auth-microservice:
    image: auth-microservice:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8091:8091
    depends_on:
      - mongo

  user-microservice:
    image: user-microservice:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8092:8092
    depends_on:
      - mongo

  system-microservice:
    image: system-microservice:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8093:8093
    depends_on:
      - mongo
      
  agent-microservice:
    image: agent-microservice:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8094:8094
    depends_on:
      - mongo
      
  log-microservice:
    image: log-microservice:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8095:8095
    depends_on:
      - mongo
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8095"]
        interval: 10s
        timeout: 10s
        retries: 5
      
  webapp:
    image: webapp:1.0-SNAPSHOT
    restart: always
    networks:
      - tfg_network
    ports:
      - 8080:8080
      

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - tfg_network
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: toor
      ME_CONFIG_MONGODB_URL: mongodb://root:toor@mongo:27017/
    depends_on:
      - mongo

networks:
    tfg_network:
        driver: bridge