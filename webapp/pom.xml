<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>edu.uoc.tfgmonitorsystem</groupId>
		<artifactId>tfg-monitor-system</artifactId>
		<version>1.2</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>webapp</artifactId>
	<name>webapp</name>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	</dependencies>

	<build>
	   <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
		<plugins>
		    <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<configuration>
					<workingDirectory>frontend</workingDirectory>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<configuration>
							<nodeVersion>v16.13.0</nodeVersion>
							<yarnVersion>v1.22.17</yarnVersion>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
					<!--
					<execution>
						<id>yarn test</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>run test - -coverage - -watchAll=false</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
					-->
					<execution>
						<id>yarn build</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
						<phase>generate-resources</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/public</outputDirectory>
							<resources>
								<resource>								    
									<directory>${project.basedir}/frontend/build</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>

                <configuration>

                    <images>
                        <!-- A single's image configuration -->
                        <image>
                            <alias>${project.name}</alias>
                            <name>${project.name}:${project.version}</name>

                            <build>
                                <from>java:8</from>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <cmd>java -jar /maven/${project.artifactId}-${project.version}.jar</cmd>
                                <ports>
                                    <port>8080</port>
                                </ports>
                            </build>

                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                            </run>

                        </image>
                    </images>
                </configuration>
            </plugin>
		</plugins>
	</build>


</project>
